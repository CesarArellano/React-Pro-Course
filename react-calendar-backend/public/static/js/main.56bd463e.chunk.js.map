{"version":3,"sources":["types/types.js","helpers/fetch.js","helpers/prepare-events.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeletingEventFab.js","components/calendar/CalendarScreen.js","components/ui/LoadingScreen.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/uiReducers.js","reducers/calendarReducer.js","reducers/rootReducers.js","store/store.js","CalendarApp.js","index.js"],"names":["types","baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","prepareEvents","events","map","event","end","moment","toDate","start","eventAddNew","type","payload","eventClearActiveEvent","eventUpdate","eventDelete","eventsLoaded","checkingFinish","login","user","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","resp","json","decodedData","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","clear","esMessages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","modalOpen","ui","actionEvent","calendar","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","_id","eventStartAddNew","maxDate","minDate","autoComplete","required","rows","AddNewFab","DeletingEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","messages","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onSelectEvent","onView","view","onDoubleClickEvent","onSelectSlot","selectable","components","LoadingScreen","PublicRoute","isLoggedIn","Component","component","rest","props","to","PrivateRoute","AppRouter","checking","exact","path","initState","rootReducers","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56bd463e.chunk.js","sourcesContent":["\nexport const types = {\n\n  authCheckingFinish: '[AUTH] Finish checking login state',\n  authLogin: '[AUTH] Login',\n  authLogout: '[AUTH] Logout',\n\n\n\n  uiOpenModal: '[UI] Open modal',\n  uiCloseModal: '[UI] Close modal',\n\n  eventSetActive: '[EVENT] Set active',\n  eventAddNew: '[EVENT] Add new',\n  eventStartAddNew: '[EVENT] Start add new event',\n  eventsLoaded: '[EVENT] Events Loaded',\n\n  eventClearActiveEvent: '[EVENT] Clear active event',\n  eventUpdate: '[EVENT] Event updated',\n  eventDelete: '[EVENT] Event deleted',\n};  ","const baseUrl = process.env.REACT_APP_API_URL;\n\nexport const fetchWithoutToken = ( endpoint, data, method = 'GET' ) => {\n  const url = `${ baseUrl }/${ endpoint }`;\n\n  if( method === 'GET' ) {\n    return fetch( url );\n  } else {\n    return fetch( url, {\n      method,\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify( data ),\n    })\n  }\n};\n\nexport const fetchWithToken = ( endpoint, data, method = 'GET' ) => {\n  const url = `${ baseUrl }/${ endpoint }`;\n  const token = localStorage.getItem('token') || '';\n  \n  if( method === 'GET' ) {\n    return fetch( url, {\n      headers: {\n        'Content-type': 'application/json',\n        'x-token': token\n      }\n    });\n  } else {\n    return fetch( url, {\n      method,\n      headers: {\n        'Content-type': 'application/json',\n        'x-token': token\n      },\n      body: JSON.stringify( data ),\n    })\n  }\n};","import moment from \"moment\";\n\nexport const prepareEvents = (events = []) => {\n  return events.map((event) => ({\n    ...event,\n    end: moment(event.end).toDate(),\n    start: moment(event.start).toDate()\n  }));\n}","import Swal from \"sweetalert2\";\nimport { fetchWithToken } from \"../helpers/fetch\";\nimport { prepareEvents } from \"../helpers/prepare-events\";\nimport { types } from \"../types/types\";\n\nexport const eventStartAddNew = ( event ) => {\n  return async ( dispatch, getState ) => {\n    const { uid, name } = getState().auth;\n\n    try {\n      const resp = await fetchWithToken('events', event, 'POST');\n      const decodedData = await resp.json();\n      console.log(decodedData);\n      if( decodedData.ok ) {\n        event.id = decodedData.event.id;\n        event.user = {\n          _id: uid,\n          name\n        };\n        dispatch( eventAddNew( event ) );\n      }\n\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n\nconst eventAddNew = ( event ) => ({\n  type: types.eventAddNew,\n  payload: event\n});\n\nexport const eventSetActive = ( event ) => ({\n  type: types.eventSetActive,\n  payload: event\n});\n\nexport const eventClearActiveEvent = ( ) => ({ type: types.eventClearActiveEvent });\n\nexport const eventStartUpdate = ( event ) => {\n  return async (dispatch) => {\n    try {\n      const resp = await fetchWithToken(`events/${ event.id }`, event, 'PUT');\n      const decodedData = await resp.json();\n      if( decodedData.ok ) {\n        dispatch( eventUpdate(decodedData.event) )\n      } else {\n        Swal.fire('Attention', decodedData.msg, 'error');\n      }\n    } catch (error) {\n      console.log(error);\n      Swal.fire('Attention', 'No se pudo actualizar el evento', 'error');\n    }  \n  };\n}\n\nconst eventUpdate = ( event ) => ({\n  type: types.eventUpdate,\n  payload: event\n});\n\nexport const eventStartDelete = () => {\n  return async (dispatch, getState) => {\n    const { actionEvent } = getState().calendar;\n    try {\n      const resp = await fetchWithToken(`events/${ actionEvent.id }`, {}, 'DELETE');\n      const decodedData = await resp.json();\n      if( decodedData.ok ) {\n        dispatch( eventDelete(actionEvent) )\n      } else {\n        Swal.fire('Attention', decodedData.msg, 'error');\n      }\n    } catch (error) {\n      console.log(error);\n      Swal.fire('Attention', 'No se pudo eliminar el evento', 'error');\n    }\n  };\n}\n\nconst eventDelete = ( event ) => ({\n  type: types.eventDelete,\n  payload: event\n});\n\n\nexport const eventStartLoading = () => {\n  return async (dispatch) => {\n    try {\n      const resp = await fetchWithToken('events');\n      const decodedData = await resp.json();\n\n      if( decodedData.ok ) {\n        const events = prepareEvents(decodedData.events);\n        dispatch( eventsLoaded( events ) );\n      }\n    } catch (error) {\n      console.log(error);\n    }\n\n  };\n}\n\nconst eventsLoaded = (events) => ({\n  type: types.eventsLoaded,\n  payload: events,\n});","import Swal from 'sweetalert2';\n\nimport { types } from \"../types/types\";\nimport { eventClearActiveEvent } from './events';\nimport { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\";\n\nexport const startLogin = ( email, password ) => {\n  return async ( dispatch ) => {\n    const resp = await fetchWithoutToken('auth', { email, password }, 'POST');\n    const decodedData = await resp.json();\n    \n    if( decodedData.ok ) {\n      localStorage.setItem( 'token', decodedData.token );\n      localStorage.setItem( 'token-init-date', new Date().getTime() );\n      dispatch( login({\n        uid: decodedData.uid,\n        name: decodedData.name,\n      }));\n    } else {\n      Swal.fire('Error', decodedData.msg, 'error');\n    }\n  }\n};\n\nexport const startRegister = ( email, password, name ) => {\n  return async (dispatch) => {\n    const resp = await fetchWithoutToken('auth/new', { email, password, name }, 'POST');\n    const decodedData = await resp.json();\n    \n    if( decodedData.ok ) {\n      localStorage.setItem( 'token', decodedData.token );\n      localStorage.setItem( 'token-init-date', new Date().getTime() );\n      dispatch( login({\n        uid: decodedData.uid,\n        name: decodedData.name,\n      }));\n    } else {\n      Swal.fire('Error', decodedData.msg, 'error');\n    }\n  }\n};\n\nexport const startChecking = () => {\n  return async (dispatch) => {\n    try {\n      const resp = await fetchWithToken('auth/renew');\n      const decodedData = await resp.json();\n\n      if( decodedData.ok ) {\n        localStorage.setItem( 'token', decodedData.token );\n        localStorage.setItem( 'token-init-date', new Date().getTime() );\n        dispatch( login({\n          uid: decodedData.uid,\n          name: decodedData.name,\n        }));\n      } else {\n        dispatch( checkingFinish() );\n      }\n    } catch(e) {\n      Swal.fire('Error', e, 'error');\n      dispatch( checkingFinish() );\n    }\n    \n  }\n}\n\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\n\nconst login = ( user ) => ({\n  type: types.authLogin,\n  payload: user,\n});\n\nexport const startLogout = () => {\n  return ( dispatch ) => {\n    localStorage.clear();\n    dispatch( eventClearActiveEvent() );\n    dispatch( logout() );\n  }\n}\n\nconst logout = () => ({ type: types.authLogout });","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n  \n  const [values, setValues] = useState(initialState);\n\n  const reset = () => {\n    setValues( initialState );\n  }\n\n  const handleInputChange = ({ target }) => {\n\n    setValues({\n      ...values,\n      [ target.name ]: target.value\n    });\n\n  }\n\n  return [ values, handleInputChange, reset ];\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\n\nimport { startLogin, startRegister } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\nimport './login.css';\n\nexport const LoginScreen = () => {\n  const dispatch = useDispatch();\n\n  const [ formLoginValues, handleLoginInputChange ] = useForm({\n    lEmail: 'raywayday@gmail.com',\n    lPassword: '123456',\n  });\n\n  const [ formRegisterValues, handleRegisterInputChange ] = useForm({\n    rName: 'César Arellano',\n    rEmail: 'cesarmauricio.arellano@gmail.com',\n    rPassword: '123456',\n    rPassword2: '123456'\n  });\n\n  const { lEmail, lPassword } = formLoginValues;\n\n  const { rName, rEmail, rPassword, rPassword2 } = formRegisterValues;\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    dispatch( startLogin(lEmail, lPassword) );\n  }\n  const handleRegister = (e) => {\n    e.preventDefault();\n    if( rPassword !== rPassword2 ) {\n      return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error');\n    }\n    \n    dispatch( startRegister(rEmail, rPassword, rName) )\n  }\n\n  return (\n    <div className=\"container login-container\">\n      <div className=\"row\">\n        <div className=\"col-md-6 login-form-1\">\n          <h3>Ingreso</h3>\n          <form onSubmit={ handleLogin } >\n            <div className=\"form-group\">\n              <input \n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Correo\"\n                name=\"lEmail\"\n                value={ lEmail }\n                onChange={ handleLoginInputChange }\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Contraseña\"\n                name=\"lPassword\"\n                value={ lPassword }\n                onChange={ handleLoginInputChange }\n              />\n            </div>\n            <div className=\"form-group\">\n              <input \n                type=\"submit\"\n                className=\"btnSubmit\"\n                value=\"Login\" \n              />\n            </div>\n        </form>\n      </div>\n      <div className=\"col-md-6 login-form-2\">\n          <h3>Registro</h3>\n          <form onSubmit={ handleRegister }>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Nombre\"\n                name=\"rName\"\n                value={ rName }\n                onChange={ handleRegisterInputChange }\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                placeholder=\"Correo\"\n                name=\"rEmail\"\n                value={ rEmail }\n                onChange={ handleRegisterInputChange }\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Contraseña\"\n                name=\"rPassword\"\n                value={ rPassword }\n                onChange={ handleRegisterInputChange }\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Repita la contraseña\" \n                name=\"rPassword2\"\n                value={ rPassword2 }\n                onChange={ handleRegisterInputChange }\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input \n                type=\"submit\" \n                className=\"btnSubmit\" \n                value=\"Crear cuenta\" \n              />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n  const dispatch = useDispatch();\n  const { name } = useSelector(state => state.auth);\n  const handleLogout = () => {\n    dispatch( startLogout() );\n  }\n\n  return (\n    <div className=\"navbar navbar-dark bg-dark mb-4\">\n      <span className=\"navbar-brand\">\n        { name }\n      </span>\n      <button onClick={ handleLogout } className=\"btn btn-outline-danger\">\n        <span className=\"textButton\">Salir</span>\n        <i className=\"fas fa-sign-out-alt\"></i>\n      </button>\n    </div>\n  )\n}\n","export const esMessages = {\n  allDay: 'Todo el día',\n  previous: '<',\n  next: '>',\n  today: 'Hoy',\n  month: 'Mes',\n  week: 'Semana',\n  day: 'Día',\n  agenda: 'Agenda',\n  date: 'Fecha',\n  time: 'Hora',\n  event: 'Evento',\n  noEventsInRange: 'No hay eventos en este rango',\n  showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n  const { title, user } = event;\n\n  return (\n    <div>\n      <strong>{ title }</strong>\n      <strong> - { user.name }</strong>\n    </div>\n  )\n}\n","import { types } from \"../types/types\"\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport moment from 'moment';\nimport DateTimePicker from 'react-datetime-picker';\nimport Modal from 'react-modal';\nimport Swal from 'sweetalert2';\n\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initEvent = {\n  title: '',\n  notes: '',\n  start: now.toDate(),\n  end: nowPlus1.toDate()\n};\n\nexport const CalendarModal = () => {\n  const [dateStart, setDateStart] = useState( now.toDate() )\n  const [dateEnd, setDateEnd] = useState( nowPlus1.toDate() )\n  \n  const dispatch = useDispatch();\n  const { modalOpen } = useSelector( state => state.ui );\n  const { actionEvent } = useSelector( state => state.calendar );\n  const [titleValid, setTitleValid] = useState(true);\n  \n  const [formValues, setFormValues] = useState( initEvent )\n\n  const { title, notes, start, end } = formValues;\n\n  useEffect(() => {\n    if( actionEvent ) {\n      setFormValues( actionEvent );\n    } else {\n      setFormValues( initEvent );\n    }\n  }, [actionEvent, setFormValues])\n\n  const handleInputChange = ({ target }) =>{\n    setFormValues({\n      ...formValues,\n      [target.name]: target.value\n    })\n  }\n\n  const closeModal = () => {\n    dispatch( uiCloseModal() )\n    dispatch( eventClearActiveEvent() )\n    setFormValues( initEvent );\n  }\n\n  const handleStartDateChange = (e) => {\n    setDateStart( e );\n    setFormValues({\n      ...formValues,\n      start: e\n    })\n  }\n\n  const handleEndDateChange = (e) => {\n    setDateEnd( e );\n    setFormValues({\n      ...formValues,\n      end: e\n    })\n  }\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    \n    const momentStart = moment( start );\n    const momentEnd = moment( end );\n    \n    if( momentStart.isSameOrAfter( momentEnd ) ) {\n      return Swal.fire(\n        \"Error\",\n        \"The End Date must be greater than the start date\",\n        \"error\"\n      );\n    }\n\n    if( title.trim().length < 2) {\n      setTitleValid(false);\n      return Swal.fire(\n        \"Error\",\n        \"The title must have more than 2 letters\",\n        \"error\"\n      );\n    }\n\n    if( actionEvent ) {\n      dispatch( eventStartUpdate( formValues ) );\n    } else {\n      dispatch( eventStartAddNew( formValues ) );\n    }\n    \n    setFormValues( initEvent );\n    setTitleValid( true );\n    closeModal()\n  }\n\n  return (\n    <div>\n      <Modal\n        isOpen={ modalOpen }\n        //onAfterOpen={ afterOpenModal }\n        onRequestClose={ closeModal }\n        style={ customStyles }\n        closeTimeoutMS= { 200 }\n        className=\"modal\"\n        overlayClassName=\"modal-fondo\"\n      >\n        <h1 className=\"modalTitle\">{ (actionEvent) ?  'Editar evento' : 'Nuevo evento' }</h1>\n        <hr />\n        <form \n          className=\"container\"\n          onSubmit={ handleOnSubmit }\n        >\n          <div className=\"form-group\">\n            <label>Fecha y hora inicio</label>\n            <DateTimePicker\n              onChange={ handleStartDateChange }\n              className=\"form-control\"\n              maxDate={ dateEnd }\n              value={ dateStart }\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Fecha y hora fin</label>\n            <DateTimePicker\n              onChange={ handleEndDateChange }\n              className=\"form-control\"\n              minDate={ dateStart }\n              value={ dateEnd }\n            />\n          </div>\n\n          <hr />\n          <div className=\"form-group\">\n            <label>Título y notas</label>\n            <input \n              type=\"text\" \n              className={ `form-control ${ !titleValid  && 'is-invalid' }`}\n              placeholder=\"Título del evento\"\n              name=\"title\"\n              autoComplete=\"off\"\n              value={ title }\n              onChange={ handleInputChange }\n              required={ true }\n            />\n            <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n          </div>\n\n          <div className=\"form-group\">\n            <textarea \n              type=\"text\" \n              className=\"form-control\"\n              placeholder=\"Notas\"\n              rows=\"4\"\n              name=\"notes\"\n              value={ notes }\n              onChange={ handleInputChange }\n            ></textarea>\n            <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n          </div>\n\n          <button\n            type=\"submit\"\n            className=\"btn btn-outline-primary btn-block\"\n          >\n            <i className=\"far fa-save\"></i>\n            <span> Guardar</span>\n          </button>\n        </form>\n      </Modal>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n  \n  const dispatch = useDispatch();\n\n  const handleClickNew = () => {\n    dispatch( uiOpenModal() ); \n  }\n\n  return (\n    <button\n      className=\"btn btn-primary fab\"\n      onClick={ handleClickNew }\n    >\n      <i className=\"fas fa-plus\"></i>  \n    </button>\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { eventStartDelete } from '../../actions/events';\n\nexport const DeletingEventFab = () => {\n  const dispatch = useDispatch();\n  const { actionEvent } = useSelector(state => state.calendar)\n\n  const handleDeleteEvent = () => {\n    dispatch( eventStartDelete( actionEvent ) );\n  }\n\n  return (\n    <button\n      className=\"btn btn-danger fab-danger\"\n      onClick={ handleDeleteEvent }\n    >\n      <i className=\"fas fa-trash\"></i>\n      <span> Borrar evento</span>\n    </button>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'moment/locale/es-mx';\n\nimport { Navbar } from '../ui/Navbar';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { esMessages } from '../../helpers/calendar-messages';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { uiOpenModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeletingEventFab } from '../ui/DeletingEventFab';\n\nmoment.locale('es-mx');\n\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n  \n  const dispatch = useDispatch();\n  const [lastView, setLastView] = useState( localStorage.getItem( 'lastView') || 'month' );\n  const { events, actionEvent } = useSelector( state => state.calendar );\n  const { uid } = useSelector( state => state.auth );\n\n  useEffect(() => {\n    dispatch( eventStartLoading() );\n  }, [dispatch])\n\n  const onDoubleClick = () => {\n    dispatch( uiOpenModal() )\n  }\n\n  const onSelectEvent = (e) => {\n    dispatch( eventSetActive(e) )\n  }\n  \n  const onViewChange = (e) => {\n    setLastView(e);\n    localStorage.setItem('lastView', e);\n  }\n\n  const onSelectedSlot = () => {\n    dispatch( eventClearActiveEvent() );\n  }\n\n  const eventStyleGetter = ( event, start, end, isSelected ) => {\n    const style = {\n      backgroundColor: event.user._id === uid ? '#367CF7' : '#2C2C2C',\n      borderRadius: '0px',\n      opacity: 0.9,\n      display: 'block',\n      color: 'white'\n    };\n\n    return {\n      style\n    }\n  };\n\n  return (\n    <div className=\"calendar-screen\">\n      <Navbar />\n      <div className=\"custom-container\">\n        <h1>Calendar Screen</h1>\n        <Calendar\n          localizer={ localizer }\n          events={ events }\n          startAccessor=\"start\"\n          endAccessor=\"end\"\n          messages={ esMessages }\n          eventPropGetter={ eventStyleGetter }\n          onSelectEvent={ onSelectEvent }\n          onView={ onViewChange }\n          view={ lastView }\n          onDoubleClickEvent={ onDoubleClick }\n          onSelectSlot={ onSelectedSlot }\n          selectable={ true }\n          components={ {\n            event: CalendarEvent\n          }}\n        />\n        {\n          (actionEvent ) && <DeletingEventFab />\n        }\n        <AddNewFab />\n        <CalendarModal />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport const LoadingScreen = () => {\n  return (\n    <div className=\"center-complete-box\">\n      <div className=\"utils__spinner\"></div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types';\n\nexport const PublicRoute = ({\n  isLoggedIn,\n  component: Component,\n  ...rest\n}) => {\n\n  return (\n    <Route { ...rest }\n      component={ (props) => (\n        ( isLoggedIn )\n          ? <Redirect to=\"/\" />\n          :  <Component { ...props } />\n      )\n    }\n    />\n  )\n}\n\nPublicRoute.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired\n}","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types';\n\nexport const PrivateRoute = ({\n  isLoggedIn,\n  component: Component,\n  ...rest\n}) => {\n\n  return (\n    <Route { ...rest }\n      component={ (props) => (\n        ( isLoggedIn )\n          ? <Component { ...props } />\n          : <Redirect to=\"/login\" />\n      )\n    }\n    />\n  )\n}\n\nPrivateRoute.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired\n}","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\n// Components\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\n\nimport { startChecking } from '../actions/auth';\nimport { LoadingScreen } from '../components/ui/LoadingScreen';\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\n\nexport const AppRouter = () => {\n  const dispatch = useDispatch();\n  const { checking, uid } = useSelector(state => state.auth);\n  \n  useEffect(() => {\n    dispatch( startChecking() );\n  }, [dispatch]);\n  \n  if( checking ) {\n    return <LoadingScreen />\n  }\n\n  return (\n    <Router>\n      <Switch>\n        <PublicRoute \n          exact \n          isLoggedIn={ !!uid }\n          path=\"/login\"\n          component={ LoginScreen }\n        />\n        <PrivateRoute \n          exact\n          isLoggedIn={ !!uid }\n          path=\"/\"\n          component={ CalendarScreen }\n        />\n        <Redirect to=\"/\" />\n      </Switch>\n    </Router>\n  )\n}\n","import { types } from \"../types/types\";\n\nconst initState = {\n  checking: true,\n}\n\nexport const authReducer = ( state = initState, action ) => {\n  switch (action.type) {\n    case types.authLogin:\n      return {\n        ...state,\n        ...action.payload,\n        checking: false,\n      }\n    case types.authCheckingFinish: \n      return {\n        ...state,\n        checking: false\n      };\n    case types.authLogout:\n      return {\n        checking: false\n      };\n    default:\n      return state;\n  }\n};","import { types } from \"../types/types\";\n\nconst initialState = {\n  modalOpen: false,\n};\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n  switch ( action.type ) {\n    case types.uiOpenModal:\n      return {\n        ...state,\n        modalOpen: true,\n      }\n    case types.uiCloseModal:\n      return {\n        ...state,\n        modalOpen: false,\n      }\n    default:\n      return state;\n  }\n};","import { types } from \"../types/types\";\n// {\n//   id: new Date().getTime(),\n//   title: 'Register Social Service',\n//   start: moment().toDate(),\n//   end: moment().add(2, 'days').toDate(),\n//   bgcolor: '#fafafa',\n//   notes: 'Comprar el pastel',\n//   user: {\n//     _id: '123',\n//     name: 'César Arellano'\n//   }\n// }\n\nconst initialState = {\n  events: [],\n  actionEvent: null\n};\n\nexport const calendarReducer = ( state = initialState, action ) => {\n  switch (action.type) {\n\n    case types.eventsLoaded:\n      return {\n        ...state,\n        events: [ ...action.payload ]\n      };\n    \n    case types.eventAddNew:\n      return {\n        ...state,\n        events: [ ...state.events, action.payload ]\n      };\n    \n    case types.eventSetActive:\n      return {\n        ...state,\n        actionEvent: action.payload\n      }\n    case types.eventClearActiveEvent:\n      return {\n        ...state,\n        actionEvent: null\n      }\n    case types.eventUpdate:\n      return {\n        ...state,\n        events: state.events.map(\n          e => ( e.id === action.payload.id ) ? action.payload : e\n        )\n      }\n    case types.eventDelete:\n      return {\n        ...state,\n        events: state.events.filter(\n          e => ( e.id !== action.payload.id )\n        ),\n        actionEvent: null\n      }\n    default:\n      return state;\n  }\n};","import { combineReducers } from 'redux';\n\n// Reducers\nimport { authReducer } from './authReducer';\nimport { uiReducer } from './uiReducers';\nimport { calendarReducer } from './calendarReducer';\n\nexport const rootReducers = combineReducers({\n  auth: authReducer,\n  ui: uiReducer,\n  calendar: calendarReducer\n})","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { rootReducers } from \"../reducers/rootReducers\";\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n  rootReducers,\n  composeEnhancers(\n    applyMiddleware( thunk )\n  )\n);\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { AppRouter } from './routers/AppRouter'\nimport { store } from './store/store'\n\nexport const CalendarApp = () => {\n  return (\n    <Provider store={ store }>\n      <AppRouter />\n    </Provider>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}